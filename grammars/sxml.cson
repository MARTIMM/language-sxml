scopeName: 'source.sxml'
name: 'Semi XML'
fileTypes: [ 'sxml', 'semi-xml']

patterns: [
  { include: '#element' }
  { include: '#method' }
  { include: '#attrKey1' }
  { include: '#attrKey2' }
  { include: '#attrKey3' }
#  { include: '#attrT1' }
  { include: '#attrT2' }
  { include: '#attrT3' }
#  { include: '#attrT4' }
  { include: '#blockAContent' }
  { include: '#blockBContent' }
  { include: '#blockCContent' }
]


repository:
#  elIdent: {
#    comment: 'Identifiers for element and namespace'
#    match: '[A-Za-z._-]\\w*'
#    name: 'variable.element.name.sxml'
#  }
#  p6Ident: {
#    comment: 'Identifiers for perl6 objects'
#    match: '[A-Za-z_]\\w*(\\-[A-Za-z_]\\w*)*'
#    name: 'variable.perl6.name.sxml'
#  }
  attrKey1: {
    comment: 'Attribute key'
    match: '([A-Za-z_][:\\w]*)(\\=)'
    captures:
      1: name: 'variable.attr.key.sxml'
      2: name: 'punctuation.attr.sxml'
#      3: name: 'variable.attr.value.sxml'
  }
  attrKey2: {
    comment: 'Attribute type 5'
    match: '(\\=)([A-Za-z_][:\\w]*)'
    captures:
      1: name: 'punctuation.attr.sxml'
      2: name: 'variable.attr.value.sxml'
  }
  attrKey3: {
    comment: 'Attribute type 6'
    match: '(\\=)\\!([A-Za-z_][:\\w]*)'
    captures:
      1: name: 'punctuation.attr.sxml'
      2: name: 'variable.attr.value.sxml'
  }
#  attrT1: {
#    comment: 'Attribute type 1'
#    match: '(?\\=)([^\\'\\"\\s]+)'
#    captures:
##      1: name: 'variable.attr.key.sxml'
##      2: name: 'punctuation.attr.sxml'
#      1: name: 'variable.attr.value.sxml'
#  }
  attrT2: {
    comment: 'Attribute type 2'
    begin: "(?\\=)'"
    end: "'"
#    contentName: 'variable.attr.value.sxml'
  }
  attrT3: {
    comment: 'Attribute type 3'
    begin: '(?\\=)"'
    end: '"'
#    contentName: 'variable.attr.value.sxml'
  }
  attrT4: {
    comment: 'Attribute type 4'
    begin: '(?\\=)<'
    end: '>'
    contentName: 'variable.attr.value.sxml'
  }
  commentLine: {
    comment: 'Single line comments'
    match: '#.*$'
    name: 'comment.line.sxml'
  }
  blockBLines: {
    comment: 'block B content'
    match: '\\S(\\\\\\}|[^}])*$'
    name: 'constant.blockB.sxml'
  }
  blockCLines: {
    comment: 'block C content'
    match: '\\S(\\\\»|[^»])*$'
    name: 'constant.blockC.sxml'
  }
  method: {
    comment: 'Method tags'
    patterns: [
      {
        match: '(\\$\\!)([A-Za-z]\\w*)\\.([a-zA-Z]\\w*)'
        captures:
          1: name: 'punctuation.method.begin.sxml'
          2: name: 'variable.module.sxml'
          3: name: 'variable.method.sxml'
        #name: 'meta.method.sxml'
      }
    ]
  }
  element: {
    comment: 'Element tags'
    patterns: [
      {
        match: '(\\$)(([A-Za-z]\\w*)\\:)?([a-zA-Z]\\w*)'
        captures:
          1: name: 'punctuation.element.begin.sxml'
          3: name: 'variable.namespace.sxml'
          4: name: 'variable.element.sxml'
        #name: 'meta.element.sxml'
      }
    ]
  }
  blockAContent: {
    comment: 'BlockA content'
    patterns: [
      {
        begin: '(?<!\\\\)\\['
        beginCaptures:
          0: name: 'punctuation.block.begin.sxml'
        end: '(?<!\\\\)\\]'
        endCaptures:
          0: name: 'punctuation.block.end.sxml'
        contentName: 'constant.blockA.sxml'
        patterns: [
          { include: '#commentLine' },
          { include: '#blockAContent' }
          { include: '#blockBContent' }
          { include: '#blockCContent' }
          { include: '#element' }
          { include: '#method' }
          { include: '#escape' }
          { include: '#attrKey1' }
          { include: '#attrKey2' }
          { include: '#attrKey3' }
#          { include: '#attrT1' }
          { include: '#attrT2' }
          { include: '#attrT3' }
#          { include: '#attrT4' }
        ]
      }
    ]
    name: 'variable.block.sxml'
  }
  blockBContent: {
    comment: 'BlockB content'
    patterns: [
      {
        begin: '(?<!\\\\)\\{'
        beginCaptures:
          0: name: 'punctuation.block.begin.sxml'
        end: '(?<!\\\\)\\}'
        endCaptures:
          0: name: 'punctuation.block.end.sxml'
        contentName: 'constant.blockB.sxml'
        patterns: [
          { include: '#escape' }
        ]
      }
    ]
  }
  blockCContent: {
    comment: 'BlockC content'
    patterns: [
      {
        begin: '(?<!\\\\)«'
        beginCaptures:
          0: name: 'punctuation.block.begin.sxml'
        end: '(?<!\\\\)»'
        endCaptures:
          0: name: 'punctuation.block.end.sxml'
        contentName: 'constant.blockC.sxml'
        patterns: [
          { include: '#escape' }
        ]
      }
    ]
  }
  escape: {
    comment: 'bolding of escaped characters'
    match: '(\\\\).'
    captures:
      1: name: 'punctuation.escape.sxml'
  }
