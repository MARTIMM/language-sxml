scopeName: 'source.sxml'
name: 'Semi XML'
fileTypes: [ 'sxml', 'semi-xml']

patterns: [
  {
    match: '\\$\\!'  #'(\\$\\!)([A-Za-z]\\w*\\.([a-zA-Z]\\w*))'
    #captures:
    #  0: name: 'entity.start.method.sxml'
    #  1: name: 'entity.name.method.sxml'
    name: 'meta.method.sxml'
  }
  {
    match: '\\$(?!\\!)' # '(\\$)(([A-Za-z]\\w*)(\\:([a-zA-Z]\\w*))?)'
    #captures:
    #  0: name: 'entity.start.element.sxml'
    #  1: name: 'entity.name.element.sxml'
    name: 'meta.element.sxml'
  }
  {
    begin: '(?<!\\\\)\\['
    beginCaptures:
      0: name: 'punctuation.block.begin.sxml'
    end: '(?<!\\\\)\\]'
    endCaptures:
      0: name: 'punctuation.block.end.sxml'
    contentName: 'constant.blockA.sxml'
    patterns: [
      {
        include: '#commentLine'
      }
    ]
  }
  {
    begin: '(?<!\\\\)\\{'
    beginCaptures:
      0: name: 'punctuation.block.begin.sxml'
    end: '(?<!\\\\)\\}'
    endCaptures:
      0: name: 'punctuation.block.end.sxml'
    contentName: 'constant.blockB.sxml'
#    patterns: [
#      {
#        include: '#blockIndents'
#      }
#    ]
  }
  {
    begin: '(?<!\\\\)«'
    beginCaptures:
      0: name: 'punctuation.block.begin.sxml'
    end: '(?<!\\\\)»'
    endCaptures:
      0: name: 'punctuation.block.end.sxml'
    contentName: 'constant.blockC.sxml'
  }
]

repository:
  elIdent: {
    comment: 'Identifiers for element and namespace'
    match: '[A-Za-z._-]\\w*'
    name: 'variable.element.name.sxml'
  }
  p6Ident: {
    comment: 'Identifiers for perl6 objects'
    match: '[A-Za-z_]\\w*(\\-[A-Za-z_]\\w*)*'
    name: 'variable.perl6.name.sxml'
  }
  commentLine: {
    comment: 'Single line comments'
    match: '#.*$'
    name: 'comment.line.sxml'
  }
  blockIndents: {
    comment: 'Color changes of indented lines in a block'
    match: '^\s+'
    name: 'constant.indent.sxml'
  }
